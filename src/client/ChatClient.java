/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package client;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import model.ChatDBSplash;
import model.ChatDBUtils;
import model.DBJavaChat;
import model.ServerClass;
/**
 *
 * @author itirium
 */
public class ChatClient extends javax.swing.JFrame {
    private static final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("dd.MM.yyyy - HH:mm:ss");
    private boolean isConnected = false;
    private List<ServerClass> servers = new ArrayList<ServerClass>();

    private static ChatClient instance;

    public static ChatClient getInstance(){
        return instance;
    }
    
    private NetworkClient client;
    /** Creates new form ChatClient */
    public ChatClient() {
        initComponents();
        ChatDBUtils.center(this);
        DBJavaChat db = new DBJavaChat();
        db.Connect();   
        servers.clear();
        servers.addAll(db.getServerList());
//        try{
//        cbServers.removeAllItems();
//        cbServers.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                cbServersActionPerformed(evt);
//            }
//        });
//        }catch(Exception e){
//            e.printStackTrace();
//        }
       for(ServerClass serv: servers){          
           cbServers.addItem(serv.ServerName);           
       }
       cbServers.setSelectedIndex(0);
       tfIP.setText(servers.get(0).ServerIp);
       tfPort.setText(servers.get(0).ServerPort);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfPort = new javax.swing.JTextField();
        btnConnect = new javax.swing.JButton();
        btnSend = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        taMessage = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListOfUsers = new javax.swing.JList<>();
        btnClear = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tpChatText = new javax.swing.JTextPane();
        tfIP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbServers = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat DB Client 2017");
        setMaximumSize(new java.awt.Dimension(559, 392));
        setMinimumSize(new java.awt.Dimension(559, 392));
        setResizable(false);
        setSize(new java.awt.Dimension(559, 392));

        jLabel1.setText("Server:");

        jLabel2.setText("Port: ");

        tfPort.setText("2018");

        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        btnSend.setText("Send");
        btnSend.setEnabled(false);
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        taMessage.setBackground(new java.awt.Color(204, 255, 255));
        taMessage.setColumns(20);
        taMessage.setRows(5);
        taMessage.setToolTipText("Type here what you want to send");
        taMessage.setEnabled(false);
        taMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                taMessageKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(taMessage);

        ListOfUsers.setBackground(new java.awt.Color(0, 255, 204));
        jScrollPane3.setViewportView(ListOfUsers);

        btnClear.setLabel("clear");

        jScrollPane4.setViewportView(tpChatText);

        tfIP.setText("127.0.0.1");
        tfIP.setToolTipText("");

        jLabel3.setText("IP:");

        cbServers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbServersActionPerformed(evt);
            }
        });

        jLabel4.setText("Connected Users:");

        jLabel5.setText("Messages");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 127, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbServers, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(5, 5, 5)
                                .addComponent(tfIP, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfPort, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(86, 86, 86))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(tfPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cbServers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        // TODO add your handling code here:
        if(!isConnected){
            client = new NetworkClient(this, cbServers.getSelectedItem().toString(), Integer.parseInt(tfPort.getText()));
            instance.client.connectToServer();
            //btnConnect.setEnabled(false);
            btnConnect.setText("Close");
            tfPort.setEditable(false);
            cbServers.setEnabled(false);
            btnSend.setEnabled(true);
            taMessage.setEnabled(true);
            isConnected = true;
        }
        else {
            this.dispose();
            System.exit(0);
            client=null;
            btnConnect.setText("Connect");
            tpChatText.setText("");
            tfPort.setEditable(true);
            cbServers.setEnabled(true);
            btnSend.setEnabled(false);
            taMessage.setEnabled(false);
            isConnected = false;
            
        }
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        client.sendMessage(taMessage.getText());
        taMessage.setText("");
    }//GEN-LAST:event_btnSendActionPerformed

    private void taMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taMessageKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            client.sendMessage(taMessage.getText());
            taMessage.setText("");
        }
    }//GEN-LAST:event_taMessageKeyPressed

    private void cbServersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbServersActionPerformed
        // TODO add your handling code here:
        for(ServerClass serv:servers){
            if(serv.ServerName.equals(cbServers.getSelectedItem().toString()))
            {
                tfIP.setText(serv.ServerIp);
                tfPort.setText(serv.ServerPort);
            }
        }
    }//GEN-LAST:event_cbServersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       // ChatDBSplash splash = new ChatDBSplash();
       // splash.Run();
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                instance = new ChatClient();
                instance.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ListOfUsers;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnSend;
    private javax.swing.JComboBox<String> cbServers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea taMessage;
    private javax.swing.JTextField tfIP;
    private javax.swing.JTextField tfPort;
    private javax.swing.JTextPane tpChatText;
    // End of variables declaration//GEN-END:variables

    
    public void Log(String message){
        try {
            SimpleAttributeSet set_bold= new SimpleAttributeSet();
            StyleConstants.setBold(set_bold, true);
            
            SimpleAttributeSet set_unbold = new SimpleAttributeSet();
            StyleConstants.setBold(set_unbold, false);
            
            
            Document doc =  tpChatText.getStyledDocument();
            String date=DATE_FORMAT.format(new Date());
            doc.insertString(doc.getLength(), date, set_bold);        
            doc.insertString(doc.getLength(),message, set_unbold);
        } catch (BadLocationException ex) {
            Logger.getLogger(ChatClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void Log(String username, String message, Color color){
        try {
            SimpleAttributeSet set_bold= new SimpleAttributeSet();
            StyleConstants.setBold(set_bold, true);
            StyleConstants.setForeground(set_bold, color);
            
            SimpleAttributeSet set_unbold = new SimpleAttributeSet();
            StyleConstants.setBold(set_unbold, false);
            
            
            Document doc =  tpChatText.getStyledDocument();
            String date=DATE_FORMAT.format(new Date());
            doc.insertString(doc.getLength(), date, set_unbold); 
            doc.insertString(doc.getLength(), username, set_bold);
            doc.insertString(doc.getLength(),message, set_unbold);
        } catch (BadLocationException ex) {
            Logger.getLogger(ChatClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    
    public void updateView(String[] users){
        DefaultListModel model = new DefaultListModel();
        for(String nickname : users){
            model.addElement(nickname);
        }
        ListOfUsers.setModel(model);
    }
    
    
}
